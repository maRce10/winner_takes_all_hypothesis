---
title: Acoustic and statistical analysis
subtitle: Winner takes all acoustic adapation
author: <a href="http://researcher.website.com/">Researcher name</a>
date: "`r Sys.Date()`"
toc: true
toc-depth: 2
toc-location: left
number-sections: true
highlight-style: pygments
format:
  html:
    df-print: kable
    code-fold: show
    code-tools: true
    css: qmd.css
editor_options: 
  chunk_output_type: console
---



```{r set root directory, echo = FALSE}

# set working directory 
knitr::opts_knit$set(root.dir =  "..")

```

```{r add link to github repo, echo = FALSE, results='asis'}

# print link to github repo if any
if (file.exists("./.git/config")){
  config <- readLines("./.git/config")
  url <- grep("url",  config, value = TRUE)
  url <- gsub("\\turl = |.git$", "", url)
  cat("\nSource code and data found at [", url, "](", url, ")", sep = "")
  }

```

```{r setup style, echo = FALSE, message = FALSE, warning=FALSE}

# options to customize chunk outputs
knitr::opts_chunk$set(
  class.source = "numberLines lineAnchors", # for code line numbers
  tidy.opts = list(width.cutoff = 65), 
  tidy = TRUE,
  message = FALSE
 )

```


<!-- skyblue box -->

::: {.alert .alert-info}

# Purpose {.unnumbered .unlisted}

- Measure degradation on re-recorded files

- Run stats

:::

&nbsp; 


<!-- light brown box -->
::: {.alert .alert-warning}

# Report overview {.unnumbered .unlisted}

- You can have the sections listed here, for instance:

  - [Lorem ipsum](#lorem-ipsum)
  - [Takeaways](#takeaways)

:::

&nbsp;

# Analysis flowchart {.unnumbered .unlisted}
```{mermaid, fig.align = "center"}
flowchart
  A[Read data] --> B(Format data) 
  B --> C(Graphs)
  C --> D(Statistical analysis)
  D --> E(Model summary) 

style A fill:#44015466
style B fill:#3E4A894D
style C fill:#26828E4D
style D fill:#6DCD594D

```


# Load packages {.unnumbered .unlisted}

```{r load packages}

# knitr is require for creating html/pdf/word reports
# formatR is used for soft-wrapping code

# install/ load packages
sketchy::load_packages(
    packages = c(
        "knitr",
        "formatR",
        "baRulho",
        "viridis",
        "warbleR",
        "Rraven",
        "brms",
        "ggplot2",
        "corrplot",
        "emmeans",
        "ggsignif"
    )
)
```
# Time sync all replicates

```{r}

# metadata <- read.csv("./data/raw/")

master.sf <- read.csv("./data/processed/master_annotations.csv")

# remove bird songs
master.sf <- master.sf[1:(grep("Haemorhous", master.sf$orig.sound.file)[1] - 1), ]

# rename sound file
master.sf$sound.files <- "consolidated_master_only_synthetic.wav"

master.sf$sound.id <- paste(master.sf$orig.sound.file, seq_len(nrow(master.sf)),
    sep = "-")

master.sf$sound.id[1] <- "start_marker"

found.starts <- baRulho::find_markers(X = master.sf, markers = "start_marker", path = "./data/raw/recordings", cores = 2)

warbleR::info_sound_files("./data/raw/recordings")

found.starts

alg.tests <- align_test_files(X = master.sf, Y = found.starts, path = "./data/raw/recordings",
    by.song = FALSE)

exp_raven("")

getOption('baRulho')$files_to_check_align_test_files

cs <- check_sels(alg.tests, path = "./data/raw/recordings")

table(alg.tests$sound.files)

# remove 2 sound files with load singing real hummingbirds
alg.tests <- alg.tests[!alg.tests$sound.files %in% c("ces-t2-10m.WAV",
    "ces-t2-10m.WAV"), ]

exp_raven(alg.tests, path = "./data/raw", file.name = "align_rerecorded",
    sound.file.path = "./data/raw/recordings")

exp_raven(alg.tests, path = "./data/raw", file.name = "align_rerecorded",
    sound.file.path = "./data/raw/recordings")

alg.tests.est <- align_test_files(X = master.sf, Y = found.starts[!found.starts$test.files %in%
    c("ces-t2-10m.WAV", "ces-t2-10m.WAV"), ], path = "./data/raw/recordings",
    by.song = FALSE, output = "est")

# add metadata
alg.tests.est$trail <- substr(alg.tests.est$sound.files, start = 0,
    stop = 3)

alg.tests.est$transect <- substr(alg.tests.est$sound.files, start = 5,
    stop = 6)

alg.tests.est$distance <- substr(alg.tests.est$sound.files, start = 8,
    stop = 10)

alg.tests.est <- alg.tests.est[order(alg.tests.est$sound.files, alg.tests.est$sound.id,
    alg.tests.est$distance), ]

alg.tests.est <- alg.tests.est[grep("marker", alg.tests.est$sound.id,
    invert = TRUE), ]

alg.tests.est <- alg.tests.est[alg.tests.est$distance != 1, ]

saveRDS(alg.tests.est, "./data/raw/extended_selection_table_rerecorded_sounds.RDS")
```

# Lorem ipsum

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum in felis ut mauris consectetur sodales. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nec ex neque. Nunc ultricies et ante ac feugiat. Nulla quam ex, viverra eget mollis non, porttitor nec ante. Donec non felis a nisi elementum consectetur tempor in mauris. Curabitur leo nunc, posuere in erat sit amet, varius aliquam mi. Nullam lacinia odio neque, et semper erat fermentum ut. Praesent mi massa, convallis in vehicula mattis, condimentum ac risus. In eget metus eget nunc pulvinar finibus. Proin nec tellus sed lorem malesuada aliquet sed laoreet augue. 

```{r example external image, eval = TRUE, out.width = "30%", echo = FALSE, fig.align= "center", fig.cap="Fig 1. R logo, Lorem ipsum dolor sit amet, consectetur adipiscing elit."}

# print center image
knitr::include_graphics(file.path(R.home("doc"), "html", "logo.jpg"))

```

<!-- '&nbsp;' adds blank space -->



<!-- light green box -->

::: {.alert .alert-success}

# Takeaways {.unnumbered .unlisted}

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum in felis ut mauris consectetur sodales. Lorem ipsum dolor sit amet, consectetur adipiscing elit.

::: 

&nbsp;

<!-- '---' adds a gray vertical line -->

---

&nbsp; 
 
 <!-- add packages used, system details and versions  -->
 
# Session information {.unnumbered .unlisted}

```{r session info, echo=F}

sessionInfo()

```
